{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "txHash": "0x55a14b0cb083306362d83a8f097090cc9861c3d393fe8ac1974cf023a3d5d324"
  },
  "proxies": [
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x3f6fd3ffa5892fc424fb095a54512709a5d1dd2e26633cde17af49006f668238",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xcf03dce183569176b8f2675a313c5239e567888d3df1d5ead231c7a468ba3193",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xdc08a7eb862f4a27cdb37cc3bc3564ed08b19dc227ef460eec6ca0d893cacb2f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "37ab735c26cb809d960bbcde87299138013edfd1acd5bd88d6b4faeb838684e0": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0xa8656a602d780cce518829c5ddd5fd97a77e92dca2edc8b40c584b0ba4536c24",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "carCounter",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)9165_storage",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:37"
          },
          {
            "label": "bicycleCounter",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)9165_storage",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:40"
          },
          {
            "label": "scooterCounter",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(Counter)9165_storage",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:43"
          },
          {
            "label": "gttCoin",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IGTT)17660",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:46"
          },
          {
            "label": "earnNFT",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IEarnNFT)17611",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:49"
          },
          {
            "label": "nftInfo",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_struct(NFTInformation)16053_storage)",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:52"
          },
          {
            "label": "nftTypePower",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_enum(Level)16036,t_uint256)",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:55"
          },
          {
            "label": "vehicleGTTGap",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_enum(EType)16031,t_uint256)",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:58"
          },
          {
            "label": "maxCarSupply",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:61"
          },
          {
            "label": "maxBicycleSupply",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:64"
          },
          {
            "label": "maxScooterSupply",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:67"
          },
          {
            "label": "isAllowed",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "EarnNFTManagement",
            "src": "contracts\\EarnNFT\\EarnNFTManagement.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IEarnNFT)17611": {
            "label": "contract IEarnNFT",
            "numberOfBytes": "20"
          },
          "t_contract(IGTT)17660": {
            "label": "contract IGTT",
            "numberOfBytes": "20"
          },
          "t_enum(EType)16031": {
            "label": "enum EType",
            "members": [
              "CAR",
              "BICYCLE",
              "SCOOTER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Level)16036": {
            "label": "enum Level",
            "members": [
              "COMMON",
              "UNCOMMON",
              "RARE",
              "EPIC"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(EType)16031,t_uint256)": {
            "label": "mapping(enum EType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Level)16036,t_uint256)": {
            "label": "mapping(enum Level => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTInformation)16053_storage)": {
            "label": "mapping(uint256 => struct NFTInformation)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)9165_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NFTInformation)16053_storage": {
            "label": "struct NFTInformation",
            "members": [
              {
                "label": "nftType",
                "type": "t_enum(Level)16036",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "eType",
                "type": "t_enum(EType)16031",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "lastUsage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "powerLeft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPower",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "powerUsed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "powerClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ffe8b7047416754be92e5178a0d51d1ac3da2bf8daa208541a09f92f7a54fc0a": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xf3aa9daa43f8cb94fa4f58092f79da44f0c0e0fe493af2d4c0ba99312b0b714f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "tokenIdCounter",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)573_storage",
            "contract": "BurnNFTManagement",
            "src": "contracts\\BurnNft\\BurnNFTManagement.sol:31"
          },
          {
            "label": "maxBurnNFTSupply",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BurnNFTManagement",
            "src": "contracts\\BurnNft\\BurnNFTManagement.sol:34"
          },
          {
            "label": "nftInfo",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(NFTInformation)670_storage)",
            "contract": "BurnNFTManagement",
            "src": "contracts\\BurnNft\\BurnNFTManagement.sol:40"
          },
          {
            "label": "isAllowed",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BurnNFTManagement",
            "src": "contracts\\BurnNft\\BurnNFTManagement.sol:43"
          },
          {
            "label": "vehicleGTTGap",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_enum(EType)658,t_uint256)",
            "contract": "BurnNFTManagement",
            "src": "contracts\\BurnNft\\BurnNFTManagement.sol:46"
          },
          {
            "label": "burnNFT",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IBurnNFT)1349",
            "contract": "BurnNFTManagement",
            "src": "contracts\\BurnNft\\BurnNFTManagement.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBurnNFT)1349": {
            "label": "contract IBurnNFT",
            "numberOfBytes": "20"
          },
          "t_enum(EType)658": {
            "label": "enum EType",
            "members": [
              "CAR",
              "BICYCLE",
              "SCOOTER"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(EType)658,t_uint256)": {
            "label": "mapping(enum EType => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTInformation)670_storage)": {
            "label": "mapping(uint256 => struct NFTInformation)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)573_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NFTInformation)670_storage": {
            "label": "struct NFTInformation",
            "members": [
              {
                "label": "eType",
                "type": "t_enum(EType)658",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUsage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "powerLeft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPower",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "score",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
